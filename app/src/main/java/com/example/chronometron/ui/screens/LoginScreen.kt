package com.example.chronometron.ui.screens

//import com.example.chronometron.api.getCategories
// Basic layout building blocks in Jetpack Compose
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding

// Material Design 3 components for modern, beautiful UIs
import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.material3.TextButton

// Compose runtime for managing state within composables
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue

// Basic UI modifiers and units for spacing, sizing, and alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.ui.unit.dp

// UI elements for images and advanced layout configurations
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*

// Core Material Design components from older Material library
import androidx.compose.material.*

// Material Design icons and runtime tools for handling dynamic UI elements
import androidx.compose.material.icons.Icons
import androidx.compose.runtime.*

// Alignment tools for positioning elements within composables
import androidx.compose.ui.Alignment

// Resource handling for images, supporting drawable resources
import androidx.compose.ui.res.painterResource

// Input handling for text fields, including password masking
import androidx.compose.ui.text.input.PasswordVisualTransformation
import androidx.compose.ui.text.input.VisualTransformation
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

// Alias for Modifier to avoid ambiguity with other Modifier imports
import androidx.compose.ui.Modifier as ComposeModifier

// Icons for visibility control in password fields
//import androidx.compose.material.icons.filled.Visibility
//import androidx.compose.material.icons.filled.VisibilityOff

// Tooling support for previewing Compose UIs within the IDE
import androidx.compose.ui.tooling.preview.Preview

// Resource class generated by Android for accessing app resources
import com.example.chronometron.R

//Colours and layout
import androidx.compose.ui.res.colorResource
import androidx.compose.foundation.BorderStroke
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Icon


@Composable
fun LoginScreen(onLoginClick: (String, String) -> Unit, onGoogleSignInClick: () -> Unit, onGithubSignInClick: () -> Unit, onSignUpClick: () -> Unit) {
    val darkBlue = colorResource(id = R.color.dark_blue)
    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(color = darkBlue)
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Top
    ) {
        Text(
            text = "Welcome",
            color = Color.White,
            fontSize = 28.sp,
            modifier = Modifier.padding(top = 32.dp)
        )

        // Chronometron logo
        Image(
            painter = painterResource(id = R.drawable.ic_chronometron_logo),
            contentDescription = "App Logo",
            modifier = Modifier
                .size(width = 233.dp, height = 150.dp)
                .padding(top = 96.dp)
        )

        Text(
            text = "Please login with",
            color = Color.White,
            fontSize = 16.sp,
            modifier = Modifier.padding(top = 96.dp)
        )

        // Social media login options
        Row(
            horizontalArrangement = Arrangement.spacedBy(8.dp),
            modifier = Modifier.padding(top = 20.dp)
        ) {
            Button(
                onClick = onGoogleSignInClick,
                modifier = Modifier.height(48.dp),
                colors = ButtonDefaults.buttonColors(containerColor = Color(0x03045E)), // Dark blue background
                shape = RoundedCornerShape(32.dp), // Set rounded corners as needed
                border = BorderStroke(2.dp, Color.White) // White border
            ) {
                Icon(painter = painterResource(id = R.drawable.ic_google_logo), contentDescription = "Google Login")
                Spacer(Modifier.width(8.dp))
                Text("Google")
            }

            Button(
                onClick = onGithubSignInClick,
                modifier = Modifier.height(48.dp),
                colors = ButtonDefaults.buttonColors(containerColor = Color(0x03045E)), // Dark blue background
                shape = RoundedCornerShape(32.dp), // Set rounded corners as needed
                border = BorderStroke(2.dp, Color.White) // White border
            ) {
                Icon(painter = painterResource(id = R.drawable.ic_github_logo), contentDescription = "GitHub Login")
                Spacer(Modifier.width(8.dp))
                Text("GitHub")
            }
        }

        //Normal Login options
        var email by remember { mutableStateOf("") }
        var password by remember { mutableStateOf("") }

        OutlinedTextField(
            value = email,
            onValueChange = { email = it },
            label = { Text("Email", color = Color.White) },
            singleLine = true,
            colors = TextFieldDefaults.outlinedTextFieldColors(
                textColor = Color.White,
                cursorColor = Color.White,
                focusedBorderColor = Color.White,
                unfocusedBorderColor = Color.Gray
            ),
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 16.dp)
        )

        OutlinedTextField(
            value = password,
            onValueChange = { password = it },
            label = { Text("Password", color = Color.White) },
            visualTransformation = PasswordVisualTransformation(),
            singleLine = true,
            colors = TextFieldDefaults.outlinedTextFieldColors(
                textColor = Color.White,
                cursorColor = Color.White,
                focusedBorderColor = Color.White,
                unfocusedBorderColor = Color.Gray
            ),
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 16.dp)
        )

        Button(
            onClick = { onLoginClick(email, password) },
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 32.dp),
            colors = ButtonDefaults.buttonColors(containerColor = Color(0xFF00B4B8)), // Light blue background
            shape = RoundedCornerShape(32.dp) // Rounded corners with 32dp radius
        ) {
            Text("Login")
        }

        TextButton(onClick = onSignUpClick) {
            Text("Sign Up", color = Color.White)
        }
    }
}
